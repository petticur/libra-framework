name: build binaries

on:
  push:
    branches:
      - "ci-job-for-cli"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # windows-11-arm currently fails build due to https://github.com/briansmith/ring/issues/1167
        # macos-latest is ARM, ubuntu-latest is x86, windows-latest is x86
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1 # We need 1.12.0 or later for Windows ARM64 support
        with:
          # Provisionally pinning version pre 1.81 sorting changes
          toolchain: 1.80.1
          override: true

      - name: install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential ca-certificates clang curl git libpq-dev libssl-dev pkg-config lsof lld libgmp-dev
          version: 1.0
        if: runner.os == 'Linux' # This action only works on Ubuntu

      - name: set RUSTFLAGS # Note this is necessary because the setting in .cargo/config.toml doesn't propagate to dependency builds
        run: echo "RUSTFLAGS=--cfg tokio_unstable" >> $GITHUB_ENV
        shell: bash

      - name: build libra binary
        run: |
          cargo b --release -p libra

      - name: check binary runs-on
        run: target/release/libra --version
        shell: bash

      - name: rename to plafrorm specific name
        run: |
          if [[ ${{ runner.os }} == "Windows" ]]; then
            binary_suffix=".exe"
          else
            binary_suffix=""
          fi
          echo "artifact_name=target/release/libra-${{ runner.os }}-${{ runner.arch }}${binary_suffix}" >> $GITHUB_ENV
          mv target/release/libra${binary_suffix} ${artifact_name}
        shell: bash

      - name: print artifact name
        run: |
          echo "artifact_name: ${{ env.artifact_name }}"
        shell: bash
